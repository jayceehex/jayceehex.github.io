{"version":3,"sources":["webpack:///./src/components/front-page-header.tsx","webpack:///./src/components/front-page-layout.tsx","webpack:///./src/pages/index.js"],"names":["FrontPageHeader","className","defaultProps","siteTitle","FrontPageLayout","lightMode","toggleLightMode","children","data","useStaticQuery","navLinks","site","siteMetadata","id","connect","state","isLightMode","app","dispatch","Helmet"],"mappings":"4NAIMA,G,UAAkB,kBACtB,4BAAQC,UAAU,wBAOpBD,EAAgBE,aAAe,CAC7BC,UAAW,IAGEH,QCkCAI,EAnCS,SAAC,GAA6C,MAA3CC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SAC/CC,EAAOC,yBAAe,cAc5B,OACE,yBAAKR,UAAS,aAAcI,EAAY,eAAiB,KACvD,kBAAC,IAAD,CACEK,UAAU,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBF,WAAY,GAC9CJ,gBAAiBA,EACjBD,UAAWA,IAEb,kBAAC,EAAD,MACA,yBAAKJ,UAAU,eACb,0BAAMY,GAAG,QAAQN,IAEnB,kBAAC,IAAD,Q,wBCbSO,uBACb,SAAAC,GAAK,MAAK,CACRC,YAAaD,EAAME,IAAID,eAEzB,KAJaF,EArBG,SAAC,GAAD,IAAGE,EAAH,EAAGA,YAAaE,EAAhB,EAAgBA,SAAhB,OAChB,oCACE,kBAACC,EAAA,EAAD,KACE,uDAEF,kBAAC,EAAD,CACEd,UAAWW,EACXV,gBAAiB,kBAAMY,EAASZ,aAAiBU,MAEjD,2BACE,0BAAMf,UAAU,aAAhB,gBADF,qU","file":"component---src-pages-index-js-b12213f884b2389af3de.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport \"./front-page-header.scss\"\n\nconst FrontPageHeader = () => (\n  <header className=\"front-page-header\"></header>\n)\n\nFrontPageHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nFrontPageHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default FrontPageHeader\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"./layout.scss\"\nimport Footer from \"./footer\"\nimport MainNav from \"./main-nav\"\nimport FrontPageHeader from './front-page-header'\n\nconst FrontPageLayout = ({ lightMode, toggleLightMode, children }) => {\n  const data = useStaticQuery(graphql`\n    query AuthorNavLinksQuery {\n      site {\n        siteMetadata {\n          author\n          navLinks {\n            name\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  return (\n    <div className={`container${lightMode ? \" light-theme\" : \"\"}`}>\n      <MainNav\n        navLinks={data.site.siteMetadata?.navLinks || []}\n        toggleLightMode={toggleLightMode}\n        lightMode={lightMode}\n      />\n      <FrontPageHeader />\n      <div className=\"content-box\">\n        <main id=\"main\">{children}</main>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nFrontPageLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default FrontPageLayout\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"../styles/styles.css\"\nimport FrontPageLayout from \"../components/front-page-layout\"\nimport { toggleLightMode } from \"../state/app\"\nimport { connect } from \"react-redux\"\n\nconst IndexPage = ({ isLightMode, dispatch }) => (\n  <>\n    <Helmet>\n      <title>jayceehex.github.io</title>\n    </Helmet>\n    <FrontPageLayout\n      lightMode={isLightMode}\n      toggleLightMode={() => dispatch(toggleLightMode(!isLightMode))}\n    >\n      <p>\n        <span className=\"highlight\">Hello there!</span> I'm a JavaScript developer\n        from the West Country. I've got experience in React and Angular\n        frameworks, and I'm trying to get better at functional programming. CSS\n        styling is my favourite coding hobby, especially when it comes to\n        accessibility. Outside of code, I read too many books and don't get\n        enough vitamin D.\n      </p>\n    </FrontPageLayout>\n  </>\n)\n\nexport default connect(\n  state => ({\n    isLightMode: state.app.isLightMode,\n  }),\n  null\n)(IndexPage)\n"],"sourceRoot":""}
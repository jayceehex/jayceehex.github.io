{"version":3,"sources":["webpack:///./src/components/header.js","webpack:///./src/components/layout.tsx","webpack:///./src/pages/about-site.js"],"names":["Header","siteTitle","className","defaultProps","Layout","path","author","navLinks","location","lightMode","toggleLightMode","children","data","useStaticQuery","site","siteMetadata","pathname","find","navLink","link","name","id","connect","state","isLightMode","app","dispatch","href","target","title","rel"],"mappings":"oLAIMA,G,oBAAS,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAH,OACb,yBAAKC,UAAU,eACb,4BAAQA,UAAU,UACd,wBAAIA,UAAU,gBACXD,OAUXD,EAAOG,aAAe,CACpBF,UAAU,IAGGD,Q,wBC4CAI,IAnDA,SAAC,GAAuD,UAiBnEC,EACAC,EACAC,EAHgB,EAhBFC,EAAqD,EAArDA,SAAUC,EAA2C,EAA3CA,UAAWC,EAAgC,EAAhCA,gBAAiBC,EAAe,EAAfA,SAChDC,EAAOC,yBAAe,aAwB5B,OACE,yBAAKX,UAAS,aAAcO,EAAY,eAAiB,KACvD,kBAAC,IAAD,CACEF,UAAU,UAAAK,EAAKE,KAAKC,oBAAV,eAAwBR,WAAY,GAC9CG,gBAAiBA,EACjBD,UAAWA,IAEb,kBAAC,EAAD,CACER,WAhBJI,EAiBMG,EAASQ,SAhBfV,GAiBM,UAAAM,EAAKE,KAAKC,oBAAV,eAAwBT,SAAxB,GAhBNC,GAiBM,UAAAK,EAAKE,KAAKC,oBAAV,eAAwBR,WAAY,GAfjC,MAATF,EACIC,GACA,UAAAC,EAASU,MAAK,SAAAC,GAAO,OAAIA,EAAQC,MAAQd,YAAzC,eAAgDe,OAAhD,MAgBF,yBAAKlB,UAAU,eACb,0BAAMmB,GAAG,QAAQV,IAEnB,kBAAC,IAAD,S,kCCzDN,4FAgEeW,uBACb,SAAAC,GAAK,MAAK,CACRC,YAAaD,EAAME,IAAID,eAEzB,KAJaF,EAzDO,SAAC,GAAD,IAAGd,EAAH,EAAGA,SAAUkB,EAAb,EAAaA,SAAUF,EAAvB,EAAuBA,YAAvB,OACpB,oCACE,kBAAC,IAAD,KACE,yEAEF,kBAAC,IAAD,CACEhB,SAAUA,EACVC,UAAWe,EACXd,gBAAiB,kBAAMgB,EAAShB,aAAiBc,MAEjD,sDAC2B,IACzB,uBACEG,KAAK,qCACLC,OAAO,SACPC,MAAM,SACNC,IAAI,cAJN,UAFF,kCAUkC,IAChC,uBACEH,KAAK,8BACLE,MAAM,QACND,OAAO,SACPE,IAAI,cAJN,SAXF,4BAmB4B,IAC1B,uBACEH,KAAK,6CACLC,OAAO,SACPC,MAAM,cACNC,IAAI,cAJN,eApBF,+BA4B+B,IAC7B,uBACEH,KAAK,yBACLC,OAAO,SACPC,MAAM,OACNC,IAAI,cAJN,QA7BF,KAuCA","file":"component---src-pages-about-site-js-4cd4ee7051c7e9f9f2b6.js","sourcesContent":["import PropTypes from \"prop-types\"\nimport React from \"react\"\nimport \"./header.scss\"\n\nconst Header = ({ siteTitle }) => (\n  <div className=\"content-box\">\n    <header className=\"header\">\n        <h1 className=\"header__text\">\n          {siteTitle}\n        </h1>\n    </header>\n  </div>\n)\n\nHeader.propTypes = {\n  siteTitle: PropTypes.string,\n}\n\nHeader.defaultProps = {\n  siteTitle: ``,\n}\n\nexport default Header\n","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport \"./layout.scss\"\nimport Header from \"./header\"\nimport Footer from \"./footer\"\nimport MainNav from \"./main-nav\"\n\nconst Layout = ({ location, lightMode, toggleLightMode, children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n          author\n          navLinks {\n            name\n            link\n          }\n        }\n      }\n    }\n  `)\n\n  const siteTitle = (\n    path: string,\n    author: string,\n    navLinks: Array<any>\n  ): string =>\n    path === \"/\"\n      ? author\n      : navLinks.find(navLink => navLink.link == path)?.name || ``\n\n  return (\n    <div className={`container${lightMode ? \" light-theme\" : \"\"}`}>\n      <MainNav\n        navLinks={data.site.siteMetadata?.navLinks || []}\n        toggleLightMode={toggleLightMode}\n        lightMode={lightMode}\n      />\n      <Header\n        siteTitle={siteTitle(\n          location.pathname,\n          data.site.siteMetadata?.author || ``,\n          data.site.siteMetadata?.navLinks || []\n        )}\n      />\n      <div className=\"content-box\">\n        <main id=\"main\">{children}</main>\n      </div>\n      <Footer />\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  children: PropTypes.node.isRequired,\n}\n\nexport default Layout\n","import React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport \"../styles/styles.css\"\nimport Layout from \"../components/layout\"\nimport { toggleLightMode } from \"../state/app\"\nimport { connect } from \"react-redux\"\n\nconst AboutSitePage = ({ location, dispatch, isLightMode }) => (\n  <>\n    <Helmet>\n      <title>About this site | jayceehex.github.io</title>\n    </Helmet>\n    <Layout\n      location={location}\n      lightMode={isLightMode}\n      toggleLightMode={() => dispatch(toggleLightMode(!isLightMode))}\n    >\n      <p>\n        This site is built using{\" \"}\n        <a\n          href=\"https://github.com/gatsbyjs/gatsby\"\n          target=\"_blank\"\n          title=\"Gatsby\"\n          rel=\"noreferrer\"\n        >\n          Gatsby\n        </a>\n        . Global state is handled using{\" \"}\n        <a\n          href=\"https://react-redux.js.org/\"\n          title=\"Redux\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          Redux\n        </a>\n        . The icons are served by{\" \"}\n        <a\n          href=\"https://github.com/react-icons/react-icons\"\n          target=\"_blank\"\n          title=\"react-icons\"\n          rel=\"noreferrer\"\n        >\n          react-icons\n        </a>\n        . Everything is styled using{\" \"}\n        <a\n          href=\"https://sass-lang.com/\"\n          target=\"_blank\"\n          title=\"Sass\"\n          rel=\"noreferrer\"\n        >\n          Sass\n        </a>\n        .\n      </p>\n      <p>\n        This site is dark mode by default. If you want to toggle between dark\n        and light modes, click the lightbulb in the top right.\n      </p>\n    </Layout>\n  </>\n)\n\nexport default connect(\n  state => ({\n    isLightMode: state.app.isLightMode,\n  }),\n  null\n)(AboutSitePage)\n"],"sourceRoot":""}